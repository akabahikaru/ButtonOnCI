name: License

on:
  schedule:
  - cron: "0 0 * * 1"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  UNITY_VER: 2021.3.12f1
  ULF_FILE: Unity_v2021.x.ulf

jobs:
  request_alf:
    name: Request .alf file ðŸ”‘
    runs-on: ubuntu-latest
    outputs:
      alf: ${{ steps.output.outputs.alf }}
    steps:
      - name: Request manual activation file
        id: alfFile
        uses: game-ci/unity-request-activation-file@main
        with:
          unityVersion: ${{ env.UNITY_VER }}

      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.alfFile.outputs.filePath }}
          path: ${{ steps.alfFile.outputs.filePath }}

      - name: Output
        id: output
        run: |
          echo "::set-output name=alf::${{ steps.alfFile.outputs.filePath }}"

  acquire_ulf:
    name: Acquire .ulf file ðŸ”‘
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Install node package, `unity-license-activate`
        run: npm install --global unity-license-activate

      - name: Activate the license
        run: unity-license-activate "${{ secrets.UNITY_EMAIL }}" "${{ secrets.UNITY_PASSWORD }}" "${{ needs.request_alf.outputs.alf }}" --password "${{ secrets.EMAIL_PASSWORD }}"

      # Add the error handling step here!
      - name: ðŸ©º Upload error screenshot
        uses: actions/upload-artifact@v1
        with:
          name: screenshot_error
          path: error.png

      - name: Read ulf
        id: ulfRead
        uses: juliangruber/read-file-action@v1.1.4
        with:
          path: ${{ env.ULF_FILE }}

      - name: Update secret UNITY_LICENSE
        uses: hmanzur/actions-set-secret@v2.0.0
        with:
          name: 'UNITY_LICENSE'
          value: '${{ steps.ulfRead.outputs.content }}'
          token: ${{ secrets.ACCESS_TOKEN }}